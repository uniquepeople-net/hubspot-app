stages:
  - build
  #- package
  - deploy
  - prod

build_node:
  stage: build
  only:
    #- develop
    - test
    - prod
  image: node:16
  script:
    - npm install
    - |
      if [[ "$CI_COMMIT_BRANCH" == "test" ]]; then
        cp webpack.test.config.js webpack.config.js
        cp .env.test .env
      elif [[ "$CI_COMMIT_BRANCH" == "prod" ]]; then
        cp webpack.prod.config.js webpack.config.js
        cp .env.prod .env
      fi
    - npm run build
  artifacts:
    paths:
      - dist/*


deploy_test:
  image: alpine
  stage: deploy
  script:
    - apk add --no-cache --update nodejs npm rsync openssh sshpass
    - sshpass -p $SSH_PASS rsync -ae "ssh -o StrictHostKeyChecking=no -p 27013" --delete dist/*  uid1120160@shell.r1.websupport.sk:~/uniquepeople.cloud/sub/ufp/
    #- ssh $UID@$SERVER -p $PORT "cd $THEME_PATH && rm -r node_modules && cd src && rm -r js && rm -r scss && rm index.js"
  rules:
  - if: $CI_COMMIT_BRANCH == "test"


deploy_prod:
  stage: deploy
  before_script:
    - eval $(ssh-agent -s)
    - echo "$WS_PRIVATE_KEY_PROD" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$WS_HOST_KEY_PROD" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - export DEPLOY_PATH=/home/ufp.sk/sub/app/
    - rsync -az -vv -r -e "ssh -p $PORT_PROD" --delete dist/* $UID_PROD@$SERVER_PROD:$DEPLOY_PATH
  rules:
  - if: $CI_COMMIT_BRANCH == "prod"
  when: manual


#package:
#  stage: package
#  image:
#    name: gcr.io/kaniko-project/executor:debug
#    entrypoint: [""]
#  script:
#    - mkdir -p /kaniko/.docker
#    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
#    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA --destination $CI_REGISTRY_IMAGE:latest
#  rules:
#    - if: $CI_COMMIT_BRANCH == "develop"

#deploy_develop:
#  stage: deploy
#  dependencies:
#    - package
#  image:
#    name: bitnami/kubectl:latest
#    entrypoint: [""]
#  script:
#    - kubectl set image deployment/ufp-dev-ufp-vue-webpack ufp-dev-ufp-vue-webpack=$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA -n ufp-dev --token=$UFP_DEV_TOKEN
#  rules:
#    - if: $CI_COMMIT_BRANCH == "develop"
#  tags:
#    - kube-runner 