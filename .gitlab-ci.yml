stages:
  - package
  - deploy

package:
  stage: package
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA --destination $CI_REGISTRY_IMAGE:latest
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"

deploy_develop:
  stage: deploy
  dependencies:
    - package
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""]
  script:
    - kubectl set image deployment/ufp-dev-ufp-vue-webpack ufp-dev-ufp-vue-webpack=$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA -n ufp-dev --token=$UFP_DEV_TOKEN
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
  tags:
    - kube-runner 

deploy_test:
  image: alpine
  stage: deploy
  script:
    - apk add --no-cache --update nodejs npm rsync openssh sshpass
    - npm install
    - npm run build
    - sshpass -p $SSH_PASS rsync -ae "ssh -o StrictHostKeyChecking=no -p 28918" dist/  uid1120160@shellserver-4.websupport.sk:~/uniquepeople.cloud/sub/ufp/
  rules:
  - if: $CI_COMMIT_BRANCH == "test"

